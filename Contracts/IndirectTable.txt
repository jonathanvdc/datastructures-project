class IndirectTable<TKey, TValue> : ITable<TKey, TValue>
// A wrapper class for tables that forwards function calls to another table.
{

    +CreateIndirectTable() : IndirectTable<TKey, TValue>

    property KeyMap
    {

        +get() : IMap<TValue, TKey> { query }
        // Gets the table's record-to-key map.

    }

    indexer
    {

        +get(in Key : TKey) : TValue { query }
        // Retrieves the item in the table with the specified key.
        // Pre:
        // For this method to return an item in the table, rather than null, the key must be in the table, i.e.
        // ContainsKey(Key) must return true.
        // Post:
        // The return value of this method will be the item that corresponds with the key, or None, if it is not found.
        // It is recommended to check if the table contains the key by using ContainsKey.

    }

    property Count
    {

        +get() : integer { query }
        // Gets the number of elements in the collection.

    }

    #GetTable() : ITable<TKey, TValue>
    // Gets the indirect table's underlying table.

    +Insert(in Value : TValue) : boolean
    // Inserts an item into the table.
    // Post:
    // Returns true if item is successfully inserted, false if the table already contains an item with the same search key.

    +ContainsKey(in Key : TKey) : boolean { query }
    // Finds out if the table contains the specified key.

    +Remove(in Key : TKey) : boolean
    // Removes a key from the table.
    // Post:
    // This method returns true if the key is in the table, false if not.

    +ToList() : IReadOnlyList<TValue> { query }
    // Gets the table's items as a read-only list.
    // The elements in this list are in the same order as those in the table's iterator, obtained through '__iter__' (the get iterator method).
    // Any statement that applies to this method therefore also applies to the '__iter__' (get iterator) method, and vice-versa.
    // Post:
    // This method returns a read-only list that describes the items in this table.
    // Modifications to this list are not allowed - it is read-only.
    // Furthermore, this list may be an alias to an internal list containing the table's items, or a copy.
    // This list need not be sorted, but must contain every item in the table.

}