class Stack<T> : IReadOnlyCollection<T>
// Represents a generic stack.
// Remarks:
// T is the type of item on the stack.
{

    +CreateStack() : Stack<T> { query }
    // Creates a new stack instance.

    +CreateStack(in dataContainer : IList<T>) : Stack<T> { query }
    // Creates a new stack instance that uses the specified list to store its data.

    property Count
    {

        +get() : integer { query }
        // Gets the number of items on the stack.

    }

    property IsEmpty
    {

        +get() : boolean { query }
        // Gets a boolean value that indicates whether the stack is empty or not.

    }

    property Top
    {

        +get() : T { query }
        // Peeks at the item at the top of the stack, without removing it.
        // Pre:
        // The stack may not be empty.
        // Post:
        // If the stack was empty, None will be returned.

    }

    +Push(in Item : T)
    // Pushes an item on the stack.

    +Pop() : T
    // Pops the item at the top of the stack.
    // Pre:
    // The stack may not be empty.
    // Post:
    // If the stack was empty, the stack's state will not change, and None will be returned.

}