class SortedListSort<T> : IListSorter<T>
// An implementation 'IListSorter<T>' that uses a sorted list to sort a regular list.
// This amounts to treesort when a 'TreeSortedList<T>' is used.
{

    +CreateSortedListSort(in SortedList : ISortedList<T>) : SortedListSort<T> { query }
    // Creates a new instance of a quicksort implementation for 'IListSorter<T>' based on the given sorted list.

    -ClearList()
    // Removes all items from the sorted list.

    +Sort(in List : IList<T>) : IList<T>
    // Sorts the items in the given list.
    // Whether the results are stored in-place or a new list is created is an implementation detail.
    // Pre:
    // 'Items' must be a mutable list of items of type 'T'.
    // Post:
    // Returns a list that contains all elements of 'Items' in sorted order. 'Items' may or may not become sorted, but will contain the same elements as before.

}