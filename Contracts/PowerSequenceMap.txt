class PowerSequenceMap : IMap<integer, iterable<integer>>
// Describes a mapping function that maps an integer to a probe sequence of the specified order.
// Remarks:
// This class is useful as a linear, quadratic, cubic, etc offset-to-probe sequence maps for tables.
{

    +CreatePowerSequenceMap(in Power : integer) : PowerSequenceMap { query }
    // Creates a new instance of a power sequence map based on the power to which the offsets will be exponentiated.
    // Pre:
    // Power should be a non-zero, positive integer.
    // If it is negative or zero, the argument will be accessible in its original form as exposed through the 'Power' property.
    // The 'Map' method will, however, generate a linear sequence.

    property Power
    {

        +get() : integer { query }
        // Gets the power to which the offsets will be exponentiated.

        -set(in value : integer)
        // Sets the power to which the offsets will be exponentiated.

    }

    +Map(in Value : integer) : iterable<integer> { query }
    // Maps the starting point of a sequence to a power sequence with offsets exponentiated to the value exposed by the 'Power' property.
    // Post:
    // Creates an infinite sequence from the initial position provided as argument, and offsets exponentiated to the value exposed by the 'Power' property.

}